<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.protecthair.dao.CertificationMapper">
  <resultMap id="BaseResultMap" type="com.protecthair.domain.Certification">
    <constructor>
      <arg column="certification_code" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="certification_type_code" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="certification_certificatedCondition" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="certification_address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="created_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <insert id="insert" parameterType="com.protecthair.domain.Certification">
    insert into certification (certification_code, user_id, certification_type_code, 
      certification_certificatedCondition, certification_address, 
      created_time)
    values (#{certificationCode,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{certificationTypeCode,jdbcType=INTEGER}, 
      #{certificationCertificatedcondition,jdbcType=VARCHAR}, #{certificationAddress,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.protecthair.domain.Certification">
    insert into certification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="certificationCode != null">
        certification_code,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="certificationTypeCode != null">
        certification_type_code,
      </if>
      <if test="certificationCertificatedcondition != null">
        certification_certificatedCondition,
      </if>
      <if test="certificationAddress != null">
        certification_address,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="certificationCode != null">
        #{certificationCode,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="certificationTypeCode != null">
        #{certificationTypeCode,jdbcType=INTEGER},
      </if>
      <if test="certificationCertificatedcondition != null">
        #{certificationCertificatedcondition,jdbcType=VARCHAR},
      </if>
      <if test="certificationAddress != null">
        #{certificationAddress,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <resultMap id="BaseResultMap" type="com.protecthair.domain.Certification">
    <constructor>
      <arg column="certification_code" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="certification_type_code" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="certification_certificatedCondition" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="certification_address" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <insert id="insert" parameterType="com.protecthair.domain.Certification">
    insert into certification (certification_code, user_id, certification_type_code, 
      certification_certificatedCondition, certification_address
      )
    values (#{certificationCode,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{certificationTypeCode,jdbcType=INTEGER}, 
      #{certificationCertificatedcondition,jdbcType=VARCHAR}, #{certificationAddress,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.protecthair.domain.Certification">
    insert into certification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="certificationCode != null">
        certification_code,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="certificationTypeCode != null">
        certification_type_code,
      </if>
      <if test="certificationCertificatedcondition != null">
        certification_certificatedCondition,
      </if>
      <if test="certificationAddress != null">
        certification_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="certificationCode != null">
        #{certificationCode,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="certificationTypeCode != null">
        #{certificationTypeCode,jdbcType=INTEGER},
      </if>
      <if test="certificationCertificatedcondition != null">
        #{certificationCertificatedcondition,jdbcType=VARCHAR},
      </if>
      <if test="certificationAddress != null">
        #{certificationAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <resultMap id="BaseResultMap" type="com.protecthair.domain.Certification">
    <constructor>
      <idArg column="certification_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="team_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="activity_begin_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="activity_end_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="team_level" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="is_pass" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="created_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="certification_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="certification_file_url" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    certification_id, team_id, activity_begin_time, activity_end_time, team_level, is_pass, 
    created_time, certification_time, certification_file_url
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from certification
    where certification_id = #{certificationId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from certification
    where certification_id = #{certificationId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.protecthair.domain.Certification">
    insert into certification (certification_id, team_id, activity_begin_time, 
      activity_end_time, team_level, is_pass, 
      created_time, certification_time, certification_file_url
      )
    values (#{certificationId,jdbcType=INTEGER}, #{teamId,jdbcType=INTEGER}, #{activityBeginTime,jdbcType=TIMESTAMP}, 
      #{activityEndTime,jdbcType=TIMESTAMP}, #{teamLevel,jdbcType=VARCHAR}, #{isPass,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{certificationTime,jdbcType=TIMESTAMP}, #{certificationFileUrl,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.protecthair.domain.Certification">
    insert into certification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="certificationId != null">
        certification_id,
      </if>
      <if test="teamId != null">
        team_id,
      </if>
      <if test="activityBeginTime != null">
        activity_begin_time,
      </if>
      <if test="activityEndTime != null">
        activity_end_time,
      </if>
      <if test="teamLevel != null">
        team_level,
      </if>
      <if test="isPass != null">
        is_pass,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="certificationTime != null">
        certification_time,
      </if>
      <if test="certificationFileUrl != null">
        certification_file_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="certificationId != null">
        #{certificationId,jdbcType=INTEGER},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=INTEGER},
      </if>
      <if test="activityBeginTime != null">
        #{activityBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="activityEndTime != null">
        #{activityEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="teamLevel != null">
        #{teamLevel,jdbcType=VARCHAR},
      </if>
      <if test="isPass != null">
        #{isPass,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="certificationTime != null">
        #{certificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="certificationFileUrl != null">
        #{certificationFileUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.protecthair.domain.Certification">
    update certification
    <set>
      <if test="teamId != null">
        team_id = #{teamId,jdbcType=INTEGER},
      </if>
      <if test="activityBeginTime != null">
        activity_begin_time = #{activityBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="activityEndTime != null">
        activity_end_time = #{activityEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="teamLevel != null">
        team_level = #{teamLevel,jdbcType=VARCHAR},
      </if>
      <if test="isPass != null">
        is_pass = #{isPass,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="certificationTime != null">
        certification_time = #{certificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="certificationFileUrl != null">
        certification_file_url = #{certificationFileUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where certification_id = #{certificationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.protecthair.domain.Certification">
    update certification
    set team_id = #{teamId,jdbcType=INTEGER},
      activity_begin_time = #{activityBeginTime,jdbcType=TIMESTAMP},
      activity_end_time = #{activityEndTime,jdbcType=TIMESTAMP},
      team_level = #{teamLevel,jdbcType=VARCHAR},
      is_pass = #{isPass,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      certification_time = #{certificationTime,jdbcType=TIMESTAMP},
      certification_file_url = #{certificationFileUrl,jdbcType=VARCHAR}
    where certification_id = #{certificationId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.protecthair.domain.Certification">
    <constructor>
      <idArg column="certification_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="team_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="activity_begin_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="activity_end_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="team_level" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="is_pass" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="created_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="certification_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="certification_file_url" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    certification_id, team_id, activity_begin_time, activity_end_time, team_level, is_pass, 
    created_time, certification_time, certification_file_url
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from certification
    where certification_id = #{certificationId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from certification
    where certification_id = #{certificationId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.protecthair.domain.Certification">
    insert into certification (certification_id, team_id, activity_begin_time, 
      activity_end_time, team_level, is_pass, 
      created_time, certification_time, certification_file_url
      )
    values (#{certificationId,jdbcType=INTEGER}, #{teamId,jdbcType=INTEGER}, #{activityBeginTime,jdbcType=TIMESTAMP}, 
      #{activityEndTime,jdbcType=TIMESTAMP}, #{teamLevel,jdbcType=VARCHAR}, #{isPass,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{certificationTime,jdbcType=TIMESTAMP}, #{certificationFileUrl,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.protecthair.domain.Certification">
    insert into certification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="certificationId != null">
        certification_id,
      </if>
      <if test="teamId != null">
        team_id,
      </if>
      <if test="activityBeginTime != null">
        activity_begin_time,
      </if>
      <if test="activityEndTime != null">
        activity_end_time,
      </if>
      <if test="teamLevel != null">
        team_level,
      </if>
      <if test="isPass != null">
        is_pass,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="certificationTime != null">
        certification_time,
      </if>
      <if test="certificationFileUrl != null">
        certification_file_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="certificationId != null">
        #{certificationId,jdbcType=INTEGER},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=INTEGER},
      </if>
      <if test="activityBeginTime != null">
        #{activityBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="activityEndTime != null">
        #{activityEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="teamLevel != null">
        #{teamLevel,jdbcType=VARCHAR},
      </if>
      <if test="isPass != null">
        #{isPass,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="certificationTime != null">
        #{certificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="certificationFileUrl != null">
        #{certificationFileUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.protecthair.domain.Certification">
    update certification
    <set>
      <if test="teamId != null">
        team_id = #{teamId,jdbcType=INTEGER},
      </if>
      <if test="activityBeginTime != null">
        activity_begin_time = #{activityBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="activityEndTime != null">
        activity_end_time = #{activityEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="teamLevel != null">
        team_level = #{teamLevel,jdbcType=VARCHAR},
      </if>
      <if test="isPass != null">
        is_pass = #{isPass,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="certificationTime != null">
        certification_time = #{certificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="certificationFileUrl != null">
        certification_file_url = #{certificationFileUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where certification_id = #{certificationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.protecthair.domain.Certification">
    update certification
    set team_id = #{teamId,jdbcType=INTEGER},
      activity_begin_time = #{activityBeginTime,jdbcType=TIMESTAMP},
      activity_end_time = #{activityEndTime,jdbcType=TIMESTAMP},
      team_level = #{teamLevel,jdbcType=VARCHAR},
      is_pass = #{isPass,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      certification_time = #{certificationTime,jdbcType=TIMESTAMP},
      certification_file_url = #{certificationFileUrl,jdbcType=VARCHAR}
    where certification_id = #{certificationId,jdbcType=INTEGER}
  </update>
</mapper>