<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.protecthair.dao.LogMapper">
  <resultMap id="BaseResultMap" type="com.protecthair.domain.Log">
    <constructor>
      <idArg column="log_code" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="log_team_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="supplier_evaluate_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.protecthair.domain.Log">
    <constructor>
      <idArg column="log_code" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="log_team_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="supplier_evaluate_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="log_specific" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    log_code, log_team_id, supplier_evaluate_time
  </sql>
  <sql id="Blob_Column_List">
    log_specific
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log
    where log_code = #{logCode,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log
    where log_code = #{logCode,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.protecthair.domain.Log">
    insert into log (log_code, log_team_id, supplier_evaluate_time, 
      log_specific)
    values (#{logCode,jdbcType=INTEGER}, #{logTeamId,jdbcType=INTEGER}, #{supplierEvaluateTime,jdbcType=TIMESTAMP}, 
      #{logSpecific,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.protecthair.domain.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logCode != null">
        log_code,
      </if>
      <if test="logTeamId != null">
        log_team_id,
      </if>
      <if test="supplierEvaluateTime != null">
        supplier_evaluate_time,
      </if>
      <if test="logSpecific != null">
        log_specific,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logCode != null">
        #{logCode,jdbcType=INTEGER},
      </if>
      <if test="logTeamId != null">
        #{logTeamId,jdbcType=INTEGER},
      </if>
      <if test="supplierEvaluateTime != null">
        #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logSpecific != null">
        #{logSpecific,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.protecthair.domain.Log">
    update log
    <set>
      <if test="logTeamId != null">
        log_team_id = #{logTeamId,jdbcType=INTEGER},
      </if>
      <if test="supplierEvaluateTime != null">
        supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logSpecific != null">
        log_specific = #{logSpecific,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.protecthair.domain.Log">
    update log
    set log_team_id = #{logTeamId,jdbcType=INTEGER},
      supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      log_specific = #{logSpecific,jdbcType=LONGVARCHAR}
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.protecthair.domain.Log">
    update log
    set log_team_id = #{logTeamId,jdbcType=INTEGER},
      supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP}
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.protecthair.domain.Log">
    <constructor>
      <idArg column="log_code" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="log_team_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="supplier_evaluate_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.protecthair.domain.Log">
    <constructor>
      <idArg column="log_code" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="log_team_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="supplier_evaluate_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="log_specific" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    log_code, log_team_id, supplier_evaluate_time
  </sql>
  <sql id="Blob_Column_List">
    log_specific
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log
    where log_code = #{logCode,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log
    where log_code = #{logCode,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.protecthair.domain.Log">
    insert into log (log_code, log_team_id, supplier_evaluate_time, 
      log_specific)
    values (#{logCode,jdbcType=INTEGER}, #{logTeamId,jdbcType=INTEGER}, #{supplierEvaluateTime,jdbcType=TIMESTAMP}, 
      #{logSpecific,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.protecthair.domain.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logCode != null">
        log_code,
      </if>
      <if test="logTeamId != null">
        log_team_id,
      </if>
      <if test="supplierEvaluateTime != null">
        supplier_evaluate_time,
      </if>
      <if test="logSpecific != null">
        log_specific,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logCode != null">
        #{logCode,jdbcType=INTEGER},
      </if>
      <if test="logTeamId != null">
        #{logTeamId,jdbcType=INTEGER},
      </if>
      <if test="supplierEvaluateTime != null">
        #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logSpecific != null">
        #{logSpecific,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.protecthair.domain.Log">
    update log
    <set>
      <if test="logTeamId != null">
        log_team_id = #{logTeamId,jdbcType=INTEGER},
      </if>
      <if test="supplierEvaluateTime != null">
        supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logSpecific != null">
        log_specific = #{logSpecific,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.protecthair.domain.Log">
    update log
    set log_team_id = #{logTeamId,jdbcType=INTEGER},
      supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      log_specific = #{logSpecific,jdbcType=LONGVARCHAR}
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.protecthair.domain.Log">
    update log
    set log_team_id = #{logTeamId,jdbcType=INTEGER},
      supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP}
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.protecthair.domain.Log">
    <constructor>
      <idArg column="log_code" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="log_team_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="supplier_evaluate_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.protecthair.domain.Log">
    <constructor>
      <idArg column="log_code" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="log_team_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="supplier_evaluate_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="log_specific" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    log_code, log_team_id, supplier_evaluate_time
  </sql>
  <sql id="Blob_Column_List">
    log_specific
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log
    where log_code = #{logCode,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log
    where log_code = #{logCode,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.protecthair.domain.Log">
    insert into log (log_code, log_team_id, supplier_evaluate_time, 
      log_specific)
    values (#{logCode,jdbcType=INTEGER}, #{logTeamId,jdbcType=INTEGER}, #{supplierEvaluateTime,jdbcType=TIMESTAMP}, 
      #{logSpecific,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.protecthair.domain.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logCode != null">
        log_code,
      </if>
      <if test="logTeamId != null">
        log_team_id,
      </if>
      <if test="supplierEvaluateTime != null">
        supplier_evaluate_time,
      </if>
      <if test="logSpecific != null">
        log_specific,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logCode != null">
        #{logCode,jdbcType=INTEGER},
      </if>
      <if test="logTeamId != null">
        #{logTeamId,jdbcType=INTEGER},
      </if>
      <if test="supplierEvaluateTime != null">
        #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logSpecific != null">
        #{logSpecific,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.protecthair.domain.Log">
    update log
    <set>
      <if test="logTeamId != null">
        log_team_id = #{logTeamId,jdbcType=INTEGER},
      </if>
      <if test="supplierEvaluateTime != null">
        supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logSpecific != null">
        log_specific = #{logSpecific,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.protecthair.domain.Log">
    update log
    set log_team_id = #{logTeamId,jdbcType=INTEGER},
      supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      log_specific = #{logSpecific,jdbcType=LONGVARCHAR}
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.protecthair.domain.Log">
    update log
    set log_team_id = #{logTeamId,jdbcType=INTEGER},
      supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP}
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.protecthair.domain.Log">
    <constructor>
      <idArg column="log_code" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="log_team_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="supplier_evaluate_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.protecthair.domain.Log">
    <constructor>
      <idArg column="log_code" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="log_team_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="supplier_evaluate_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="log_specific" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    log_code, log_team_id, supplier_evaluate_time
  </sql>
  <sql id="Blob_Column_List">
    log_specific
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log
    where log_code = #{logCode,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log
    where log_code = #{logCode,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.protecthair.domain.Log">
    insert into log (log_code, log_team_id, supplier_evaluate_time, 
      log_specific)
    values (#{logCode,jdbcType=INTEGER}, #{logTeamId,jdbcType=INTEGER}, #{supplierEvaluateTime,jdbcType=TIMESTAMP}, 
      #{logSpecific,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.protecthair.domain.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logCode != null">
        log_code,
      </if>
      <if test="logTeamId != null">
        log_team_id,
      </if>
      <if test="supplierEvaluateTime != null">
        supplier_evaluate_time,
      </if>
      <if test="logSpecific != null">
        log_specific,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logCode != null">
        #{logCode,jdbcType=INTEGER},
      </if>
      <if test="logTeamId != null">
        #{logTeamId,jdbcType=INTEGER},
      </if>
      <if test="supplierEvaluateTime != null">
        #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logSpecific != null">
        #{logSpecific,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.protecthair.domain.Log">
    update log
    <set>
      <if test="logTeamId != null">
        log_team_id = #{logTeamId,jdbcType=INTEGER},
      </if>
      <if test="supplierEvaluateTime != null">
        supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logSpecific != null">
        log_specific = #{logSpecific,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.protecthair.domain.Log">
    update log
    set log_team_id = #{logTeamId,jdbcType=INTEGER},
      supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      log_specific = #{logSpecific,jdbcType=LONGVARCHAR}
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.protecthair.domain.Log">
    update log
    set log_team_id = #{logTeamId,jdbcType=INTEGER},
      supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP}
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.protecthair.domain.Log">
    <constructor>
      <idArg column="log_code" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="log_team_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="supplier_evaluate_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.protecthair.domain.Log">
    <constructor>
      <idArg column="log_code" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="log_team_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="supplier_evaluate_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="log_specific" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    log_code, log_team_id, supplier_evaluate_time
  </sql>
  <sql id="Blob_Column_List">
    log_specific
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log
    where log_code = #{logCode,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log
    where log_code = #{logCode,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.protecthair.domain.Log">
    insert into log (log_code, log_team_id, supplier_evaluate_time, 
      log_specific)
    values (#{logCode,jdbcType=INTEGER}, #{logTeamId,jdbcType=INTEGER}, #{supplierEvaluateTime,jdbcType=TIMESTAMP}, 
      #{logSpecific,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.protecthair.domain.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logCode != null">
        log_code,
      </if>
      <if test="logTeamId != null">
        log_team_id,
      </if>
      <if test="supplierEvaluateTime != null">
        supplier_evaluate_time,
      </if>
      <if test="logSpecific != null">
        log_specific,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logCode != null">
        #{logCode,jdbcType=INTEGER},
      </if>
      <if test="logTeamId != null">
        #{logTeamId,jdbcType=INTEGER},
      </if>
      <if test="supplierEvaluateTime != null">
        #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logSpecific != null">
        #{logSpecific,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.protecthair.domain.Log">
    update log
    <set>
      <if test="logTeamId != null">
        log_team_id = #{logTeamId,jdbcType=INTEGER},
      </if>
      <if test="supplierEvaluateTime != null">
        supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logSpecific != null">
        log_specific = #{logSpecific,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.protecthair.domain.Log">
    update log
    set log_team_id = #{logTeamId,jdbcType=INTEGER},
      supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      log_specific = #{logSpecific,jdbcType=LONGVARCHAR}
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.protecthair.domain.Log">
    update log
    set log_team_id = #{logTeamId,jdbcType=INTEGER},
      supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP}
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.protecthair.domain.Log">
    <constructor>
      <idArg column="log_code" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="log_team_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="supplier_evaluate_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.protecthair.domain.Log">
    <constructor>
      <idArg column="log_code" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="log_team_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="supplier_evaluate_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="log_specific" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    log_code, log_team_id, supplier_evaluate_time
  </sql>
  <sql id="Blob_Column_List">
    log_specific
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log
    where log_code = #{logCode,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log
    where log_code = #{logCode,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.protecthair.domain.Log">
    insert into log (log_code, log_team_id, supplier_evaluate_time, 
      log_specific)
    values (#{logCode,jdbcType=INTEGER}, #{logTeamId,jdbcType=INTEGER}, #{supplierEvaluateTime,jdbcType=TIMESTAMP}, 
      #{logSpecific,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.protecthair.domain.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logCode != null">
        log_code,
      </if>
      <if test="logTeamId != null">
        log_team_id,
      </if>
      <if test="supplierEvaluateTime != null">
        supplier_evaluate_time,
      </if>
      <if test="logSpecific != null">
        log_specific,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logCode != null">
        #{logCode,jdbcType=INTEGER},
      </if>
      <if test="logTeamId != null">
        #{logTeamId,jdbcType=INTEGER},
      </if>
      <if test="supplierEvaluateTime != null">
        #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logSpecific != null">
        #{logSpecific,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.protecthair.domain.Log">
    update log
    <set>
      <if test="logTeamId != null">
        log_team_id = #{logTeamId,jdbcType=INTEGER},
      </if>
      <if test="supplierEvaluateTime != null">
        supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logSpecific != null">
        log_specific = #{logSpecific,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.protecthair.domain.Log">
    update log
    set log_team_id = #{logTeamId,jdbcType=INTEGER},
      supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP},
      log_specific = #{logSpecific,jdbcType=LONGVARCHAR}
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.protecthair.domain.Log">
    update log
    set log_team_id = #{logTeamId,jdbcType=INTEGER},
      supplier_evaluate_time = #{supplierEvaluateTime,jdbcType=TIMESTAMP}
    where log_code = #{logCode,jdbcType=INTEGER}
  </update>
</mapper>